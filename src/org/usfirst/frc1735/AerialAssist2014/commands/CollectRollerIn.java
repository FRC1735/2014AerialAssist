// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc1735.AerialAssist2014.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1735.AerialAssist2014.Robot;
/**
 *
 */
public class  CollectRollerIn extends Command {
    public CollectRollerIn() {
        this(99);  // if called without args (as with a button press) default timeout to 99 seconds... essentially infinite
    }
    
    public CollectRollerIn(double timeout) {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.collectorRoller);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        setTimeout(timeout);
    }
    // Called just before this Command runs the first time
    protected void initialize() {
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        //System.out.println("RollerIn Command called"); 
        Robot.collectorRoller.engage(-1); // Negative values pull ball in
    }
    // Make this return true when this Command no longer needs to run execute()
    // In this case, nothing should terminate the command except releasing the button.
    protected boolean isFinished() {
        boolean finished = isTimedOut();
        if (Robot.m_debugOn && finished) System.out.println("CollectRollerIn command has finished.");
        return finished;
    }
    // Called once after isFinished returns true
    protected void end() {
        if(Robot.m_debugOn) System.out.println("CollecorRollerIn command was terminated.");
        Robot.collectorRoller.stop();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
